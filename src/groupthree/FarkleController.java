package groupthree;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;

import java.io.IOException;

/**
 * This is the controller class for Farkle. It is the class that interfaces between
 * the FXML files generated by Scene Builder and the local variables and objects in Java
 * via the @FXML annotation.
 * @author Wes Harrison
 * @version 1.0
 */
public class FarkleController {

    @FXML
    protected Button rollButton;
    @FXML
    protected Button bankPointsButton;
    @FXML
    protected Rectangle rect0;
    @FXML
    protected Rectangle rect1;
    @FXML
    protected Rectangle rect2;
    @FXML
    protected Rectangle rect3;
    @FXML
    protected Rectangle rect4;
    @FXML
    protected Rectangle rect5;

    /**
     * When this method is called, it will exit the application.
     */
    public void exitHandler() {
        System.exit(0);
    }


    /**
     * When this method is called, it will change the Scene to GameScreen.
     * @param event The button push event that signals entrance into the main game screen.
     */
    public void enterGameScreenButtonPushed(ActionEvent event) throws IOException {

        Parent gameScreenParent = FXMLLoader.load(getClass().getResource("GameScreen.fxml"));
        Scene gameScreen = new Scene(gameScreenParent);

        Stage window = (Stage)(((Node)event.getSource()).getScene().getWindow());
        window.setScene(gameScreen);
        window.show();
    }

    public void rollTheDiceButtonPushed(ActionEvent event) {


    }

    public void bankPointsButtonPushed(ActionEvent event){

        diceRollAnimate imgs = new diceRollAnimate();

        imgs.cycleImages();

    }




}
